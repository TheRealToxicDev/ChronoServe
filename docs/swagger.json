{
    "swagger": "2.0",
    "info": {
        "description": "Cross-platform service management API",
        "title": "SysManix API",
        "termsOfService": "https://opensource.org/licenses/MIT",
        "contact": {
            "name": "Toxic Development",
            "url": "https://github.com/toxic-development/sysmanix"
        },
        "license": {
            "name": "AGPL-3.0",
            "url": "https://opensource.org/license/agpl-v3"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticates a user and returns a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns service health information and status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Get service health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/base.HealthStatus"
                        }
                    }
                }
            }
        },
        "/services": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of all available system services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "List system services",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.ServiceListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/services.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/services/logs/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns logs for the specified service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Get service logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of log lines to return (default: 100)",
                        "name": "lines",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.ServiceLogsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/services.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/services.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/services/start/{name}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Starts the specified system service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Start a system service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.ServiceActionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/services.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/services.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/services/status/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the current status of the specified service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Get service status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.ServiceStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/services.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/services.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/services/stop/{name}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Stops the specified system service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Stop a system service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.ServiceActionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/services.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/services.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.LoginResponse": {
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "base.HealthStatus": {
            "type": "object",
            "properties": {
                "goVersion": {
                    "type": "string"
                },
                "memory": {
                    "$ref": "#/definitions/base.MemStats"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uptime": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "base.MemStats": {
            "type": "object",
            "properties": {
                "alloc": {
                    "type": "integer"
                },
                "heapInUse": {
                    "type": "number"
                },
                "numGC": {
                    "type": "integer"
                },
                "sys": {
                    "type": "integer"
                },
                "totalAlloc": {
                    "type": "integer"
                }
            }
        },
        "services.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "message": {
                    "type": "string",
                    "example": "An error occurred while processing your request"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "services.LogEntry": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string",
                    "example": "info"
                },
                "message": {
                    "type": "string",
                    "example": "Service started successfully"
                },
                "time": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "services.ServiceActionResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Service started successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "services.ServiceListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.ServiceSummary"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Services retrieved successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "services.ServiceLogsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.LogEntry"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Logs retrieved successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "services.ServiceStatus": {
            "type": "object",
            "properties": {
                "isActive": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "nginx"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "services.ServiceStatusResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/services.ServiceStatus"
                },
                "message": {
                    "type": "string",
                    "example": "Service status retrieved successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "services.ServiceSummary": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string",
                    "example": "Nginx Web Server"
                },
                "name": {
                    "type": "string",
                    "example": "nginx"
                },
                "status": {
                    "type": "string",
                    "example": "running"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and the JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}