basePath: /
definitions:
  auth.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  auth.LoginResponse:
    properties:
      roles:
        items:
          type: string
        type: array
      token:
        type: string
    type: object
  base.HealthStatus:
    properties:
      goVersion:
        type: string
      memory:
        $ref: '#/definitions/base.MemStats'
      startTime:
        type: string
      status:
        type: string
      uptime:
        type: string
      version:
        type: string
    type: object
  base.MemStats:
    properties:
      alloc:
        type: integer
      heapInUse:
        type: number
      numGC:
        type: integer
      sys:
        type: integer
      totalAlloc:
        type: integer
    type: object
  services.ErrorResponse:
    properties:
      code:
        example: 404
        type: integer
      message:
        example: An error occurred while processing your request
        type: string
      status:
        example: error
        type: string
    type: object
  services.LogEntry:
    properties:
      level:
        example: info
        type: string
      message:
        example: Service started successfully
        type: string
      time:
        example: "2023-01-01T12:00:00Z"
        type: string
    type: object
  services.ServiceActionResponse:
    properties:
      data: {}
      message:
        example: Service started successfully
        type: string
      status:
        example: success
        type: string
    type: object
  services.ServiceListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/services.ServiceSummary'
        type: array
      message:
        example: Services retrieved successfully
        type: string
      status:
        example: success
        type: string
    type: object
  services.ServiceLogsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/services.LogEntry'
        type: array
      message:
        example: Logs retrieved successfully
        type: string
      status:
        example: success
        type: string
    type: object
  services.ServiceStatus:
    properties:
      isActive:
        example: true
        type: boolean
      name:
        example: nginx
        type: string
      status:
        example: active
        type: string
      updatedAt:
        example: "2023-01-01T12:00:00Z"
        type: string
    type: object
  services.ServiceStatusResponse:
    properties:
      data:
        $ref: '#/definitions/services.ServiceStatus'
      message:
        example: Service status retrieved successfully
        type: string
      status:
        example: success
        type: string
    type: object
  services.ServiceSummary:
    properties:
      displayName:
        example: Nginx Web Server
        type: string
      name:
        example: nginx
        type: string
      status:
        example: running
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: Toxic Development
    url: https://github.com/toxic-development/sysmanix
  description: Cross-platform service management API
  license:
    name: AGPL-3.0
    url: https://opensource.org/license/agpl-v3
  termsOfService: https://opensource.org/licenses/MIT
  title: SysManix API
  version: 1.0.0
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResponse'
      summary: Authenticate user
      tags:
      - auth
  /health:
    get:
      consumes:
      - application/json
      description: Returns service health information and status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base.HealthStatus'
      summary: Get service health
      tags:
      - health
  /services:
    get:
      consumes:
      - application/json
      description: Returns a list of all available system services
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.ServiceListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/services.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List system services
      tags:
      - services
  /services/logs/{name}:
    get:
      consumes:
      - application/json
      description: Returns logs for the specified service
      parameters:
      - description: Service name
        in: path
        name: name
        required: true
        type: string
      - description: 'Number of log lines to return (default: 100)'
        in: query
        name: lines
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.ServiceLogsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/services.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/services.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get service logs
      tags:
      - services
  /services/start/{name}:
    post:
      consumes:
      - application/json
      description: Starts the specified system service
      parameters:
      - description: Service name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.ServiceActionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/services.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/services.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Start a system service
      tags:
      - services
  /services/status/{name}:
    get:
      consumes:
      - application/json
      description: Returns the current status of the specified service
      parameters:
      - description: Service name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.ServiceStatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/services.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/services.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get service status
      tags:
      - services
  /services/stop/{name}:
    post:
      consumes:
      - application/json
      description: Stops the specified system service
      parameters:
      - description: Service name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.ServiceActionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/services.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/services.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Stop a system service
      tags:
      - services
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and the JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
